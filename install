#!/bin/bash

#-----------
# Configurations
#-----------

ELIXIR_VEION=${ELIXIR_VERSION-master}
RAILS_NAME=${RAILS_NAME-samplerails}
RAILS_DIR=${RAILS_DIR-/var/apps/${RAILS_NAME}}
RAILS_REPO=${RAILS_REPO-git@github.com:aforward/samplerails.git}
RAILS_HTTP_PORT=${RAILS_PORT-80}
RAILS_SSL_PORT=${RAILS_PORT-443}

#-----------
# Install Script
#-----------

mkdir -p $RAILS_DIR

cp ./submodules/rails/files/rails.dockerfile $RAILS_DIR/Dockerfile
sed -i s/@ELIXIR_VERSION@/$ELIXIR_VERSION/g $RAILS_DIR/Dockerfile
sed -i s/@RAILS_NAME@/${RAILS_NAME}/g $RAILS_DIR/Dockerfile

GIT_URL=$RAILS_REPO \
  GIT_BASE_DIR=$RAILS_DIR \
  GIT_REPO_NAME=webapp \
  ./submodules/git/install

printf "%b" "
webapp/.git
webapp/.gitignore
webapp/test
webapp/README.md
" > $RAILS_DIR/.dockerignore

(cd $RAILS_DIR && docker build -t ${RAILS_NAME} .)

printf "%b" "#!/bin/bash
docker run -i -t -p ${RAILS_HTTP_PORT}:80 -p ${RAILS_SSL_PORT}:443 ${RAILS_NAME} /bin/bash
" > $RAILS_DIR/debug

printf "%b" "#!/bin/bash
docker rm ${RAILS_NAME} > /dev/num
docker run -d -t -p ${RAILS_HTTP_PORT}:80 -p ${RAILS_SSL_PORT}:443 --name ${RAILS_NAME} ${RAILS_NAME}
" > $RAILS_DIR/start

printf "%b" "#!/bin/bash
docker stop \$(docker ps | grep ${RAILS_NAME} | awk '{print \$1}')
"  > $RAILS_DIR/stop

printf "%b" "#!/bin/bash
RUNNING=\`docker ps | grep ${RAILS_NAME}\`
if [[ \"\$RUNNING\" == '' ]]; then
  echo 'Starting ${RAILS_NAME} container...'
  $RAILS_DIR/start
else
  echo '${RAILS_NAME} container already running'
fi
" > $RAILS_DIR/idempot

chmod 755 $RAILS_DIR/start
chmod 755 $RAILS_DIR/idempot
chmod 755 $RAILS_DIR/debug
chmod 755 $RAILS_DIR/stop
